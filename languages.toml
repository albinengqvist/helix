[language-server.emmet-ls]
args = ["--stdio"]
command="emmet-ls"

[language-server.astro-ls]
command = "astro-ls"
args = ["--stdio"]
config = {typescript = {tsdk = "./node_modules/typescript/lib"}, environment = "node"}

[language-server]
biome = { command = "biome", args = ["lsp-proxy"] }

[[language]]
name = "html"
formatter = { command = 'npx', args = ["prettier", "--parser", "html"] }
language-servers = ["vscode-html-language-server", "emmet-ls", "tailwindcss-ls"]

[[language]]
name = "css"
formatter = { command = 'npx', args = ["prettier", "--parser", "css"] }
language-servers = [ "vscode-css-language-server", "tailwindcss-ls"]

[[language]]
name = "scss"
formatter = { command = 'npx', args = ["prettier", "--parser", "scss"] }

[[language]]
name = "javascript"
language-servers = [{except-features = ["format"], name = "typescript-language-server"}, "biome"]
formatter = { command = 'npx', args = ["prettier", "--parser", "typescript"] }
auto-format = true

[[language]]
name = "typescript"
language-servers = [{except-features = ["format"], name = "typescript-language-server"}, "biome"]
formatter = { command = 'npx', args = ["prettier", "--parser", "typescript"] }
auto-format = true

[[language]]
name = "jsx"
language-servers = [{except-features = ["format"], name = "typescript-language-server"}, "emmet-ls", "tailwindcss-ls", "biome"]
formatter = { command = 'npx', args = ["prettier", "--parser", "typescript"] }
auto-format = true

[[language]]
name = "tsx"
language-servers = [{except-features = ["format"], name = "typescript-language-server"}, "emmet-ls", "tailwindcss-ls", "biome"]
formatter = { command = 'npx', args = ["prettier", "--parser", "typescript"] }
auto-format = true

[[language]]
name = "json"
language-servers = [ { name = "vscode-json-language-server", except-features = [ "format" ] }, "biome" ]
# formatter = { command = 'npx', args = ["prettier", "--parser", "json"] }

[[language]]
name = "markdown"
formatter = { command = 'dprint', args = ["--stdin", "fmt", "md"] }
soft-wrap.enable = true
soft-wrap.wrap-at-text-width = true

[[language]]
name = "astro"
formatter = { command = 'npx', args = ["prettier", "--plugin", "prettier-plugin-astro", "--parser", "astro"] }
auto-format = true
language-servers = [ "astro-ls", "emmet-ls" ]

[[language]]
name = "go"
auto-format = true
formatter = { command = "goimports" }

[[language]]
name = "python"
scope = "source.python"
file-types = ["py"]
auto-format = true
formatter = {command = "black", args = ["-q", "-"]}
language-servers = [ "pyright" ]
indent = { tab-width = 4, unit = "    " }

[language-server.pyright]
command = "pyright-langserver"
args = ["--stdio"]
config = {}

[[language]]
name = "rust"
scope = "source.rust"
injection-regex = "rust"
file-types = ["rs"]
auto-format = true
roots = [
    "Cargo.toml",
    "Cargo.lock"
]

[language-server.rust-anaylzer]
command = "rust-analyzer"
args = []

[language-server.rust-analyzer.config]
inlayHints.bindingModeHints.enable = false
inlayHints.closingBraceHints.minLines = 10
inlayHints.closureReturnTypeHints.enable = "with_block"
inlayHints.discriminantHints.enable = "fieldless"
inlayHints.lifetimeElisionHints.enable = "skip_trivial"
inlayHints.typeHints.hideClosureInitialization = false

[language.auto-pairs]
'(' = ')'
'{' = '}'
'[' = ']'
'"' = '"'
'`' = '`'
